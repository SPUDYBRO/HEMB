/*



How to read and write this CSS file


indent the code to show where it starts and ends. for example:

/ Page the file relates to /

    #example_element_1{
        style: value;
    }
    #example_element_2{
        style: value;
    }


/ another page /

    #example_element_3{
        style: value;
    }
    #example_element_4{
        style: value;
    }


this way we can see which elements are related to which page. which will make it easier to read and write the code
between multiple people.

you can also intent further to explain a certain area of code, for example:

    #example_element_1{
        style: value;
    }
    #example_element_2{
        style: value;
    }
    
    / this code is focused on something specific /
        #example_element_3{
            style: value;
        }
        #example_element_4{
            style: value;
        }
    
    #example_element_5{
        style: value;
    }

*/







/* Declaring global scale variables by using :root */
:root {
    /* to make another variable follow the format
    --var_name: value; */

    
    --background_color: rgb(232, 232, 232);

    --legend_and_input_color: rgb(33, 110, 123);
    --input_background_color: rgb(198, 198, 198);

    --hero_image_background: url('./images/hero_image.png'); /* note that this is a `background-image` */

    --nav_background_color: rgba(170, 200, 220, 0.9);
    --nav_button_color: rgb(181, 183, 255);
    --nav_button_hover_color: rgb(247, 248, 250);
    --nav_active_button_color: rgb(150 213 255);
    --nav_border_color: rgb(52, 121, 182);
    --nav_element_gap: 3%;

    --link_text_color: rgb(44, 75, 255);
    --link_text_color_hover: rgb(38, 47, 100);


    /*note that most values are going to be blank/ placeholders for actual styles*/
}



/* General styling
This is for styling every single page */

    body {
        /* Styling the entire body of all pages */
        background-color: var(--background_color);

        margin: 0px; /* removes the default margin */
        min-width: 312px;
    }

    main {
        /* styles all mains to be a min of 100vh so that the footer stays at the bottom 
        we might not need this in the future*/
        min-height: 100vh;
    }


    /* Main navigation styling; Note: values should be changed from the variables not from here */
        .main_navigation {
            width: 30%;
            min-width: 500px;
            margin: -30px auto 40px auto;
            padding: 1% 0px;
            background-color: var(--nav_background_color);
            position: sticky;
            top: 0;

            /* border */
            border: 3px solid var(--nav_border_color);
            border-radius: 30px;

            /* flex styles */
            display: flex;
            justify-content: center;
            gap: var(--nav_element_gap);

            box-shadow: 5px 5px 20px -5px black;
        }

        .main_navigation a {
            text-decoration: none;
            color: black;
            background-color: var(--nav_button_color);
            border-radius: 50px;
            transition: background-color 0.3s ease;
            font-size: calc(1em + 0.5vw);
            padding: 1% 2%; 
        }

        .main_navigation a.current {
            background-color: var(--nav_active_button_color);
        }

        .main_navigation a:hover {
            background-color: var(--nav_button_hover_color);
        }


    /* Footer styling, this will be basic for now but will carry all important links*/
        footer {
            position: static;
            bottom: 0;
            background-color: rgb(155, 155, 155);
            height: 40vh;
            display: flex;
            gap: 5%;
        }
        .footer_left {
            width: 45%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
        }
        .footer_links {
            padding-left: 5%;
            display: flex;
            align-items: center;
        }
        .footer_links a {
            color: var(--link_text_color);
        }
        .footer_links a:hover {
            color: var(--link_text_color_hover);
        }






/* index.html styling (only put things relevant to index here) */
    #hero_img {
        /* Basic styling for the hero image (giant img the user sees when they first load in) */

        position: relative;


        width: 100%;
        height: 90vh;
        min-width: 100%;
        min-height: 90vh;

        background-image: var(--hero_image_background);
        /* Background generated by ChatGPT
            Prompt provided:
            "create me a hero image for my website hero image, with a modern simplistic feel for the website
            1. IT Support company
            2. A man in a suit
            3. light theme
            4. abstract or somthing"

            reason for using GEN AI to create image:
                1. our team does not have the graphic design skills to create a hero image
                2. our team does not have the time to create a hero image
                3. our team does not have the budget to pay someone to create a hero image
        */



        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;


        box-shadow: inset 0px -2px 20px -5px black
    }

    #hero_text {
        position: absolute;
        top: 20%;
        left: 28%;
        transform: translate(-50%, -50%);
        text-align: center;
    }
    #hero_text h1{
        font-size: 4em;
        color: rgb(40, 69, 92);
        text-shadow: 5px 5px 4px rgb(129, 189, 230);
        margin: 0px;
    }
    #hero_text p{
        font-size: 1.3em;
        color: rgb(40, 69, 92);
        text-shadow: 5px 5px 4px rgb(129, 189, 230);
        margin: 0px;
    }
    


/* About_Us.html styling (only put things relevant to index here) */

/* main {
    width: %70 
} */

    /* Line Breaks */

    /* About Us - Title / What We Do Content */

    #About_Main {
        width: 85%;
        margin: 0px auto;
    }

    #about_us_heading {
        text-align: center;
        padding: 7px;
    }

    /* Evan Harrison Section on Page */



/* jobs.html styling */
    

/*

/ Page the file relates to /

    #example_element_1{
        style: value;
    }
    #example_element_2{
        style: value;
    }


/ another page /

    #example_element_3{
        style: value;
    }
    #example_element_4{
        style: value;
    }


this way we can see which elements are related to which page. which will make it easier to read and write the code
between multiple people.

you can also intent further to explain a certain area of code, for example:

    #example_element_1{
        style: value;
    }
    #example_element_2{
        style: value;
    }
    
    / this code is focused on something specific /
        #example_element_3{
            style: value;
        }
        #example_element_4{
            style: value;
        }
    
    #example_element_5{
        style: value;
    }

*/    


/* Apply Page Styling */

    /* Defines the base color theme for the job page (May incorporate this theme across all pages with group approval. */

        #applyPage {
            background-color: var(--background_color);
        }

        #applyPage fieldset {
            border: 2px solid var(--legend_and_input_color);
        }

        #applyPage input, select, textarea {
            background-color: var(--input_background_color);
            border: 1.5px solid var(--legend_and_input_color);
        }

        #applyPage input::placeholder, textarea::placeholder {
            color: black;
        }

    /* Putting the experience and other skills fieldset 
    tags into a container so that they can be side by side */
        #containerForTechnicalSkillsAndOtherSkills {
            display: flex;
            gap: 4px;
        }
        #technicalSkillsLegend {
            width: fit-content;
            display: inline-block;
            padding: 6px;
        }

        #otherSkillsLegend {
            width: fit-content;
            display: inline-block;
            padding: 6px;
        }
    
    /* Putting the contact and preffered skills fieldset
    tags into a container so that they can be side by side */
        #containerForContactAndPreferredSkills {
            display: flex;
            gap: 4px;
        }

        #contactLegend {
            width: fit-content;
            display: inline-block;
            padding: 6px;
        }

        #preferredSkillsLegend {
            width: fit-content;
            display: inline-block;
            padding: 6px;
        }

        #preferredSkillsLegend label {
            margin-right: 20px;
        }



    /* Putting the gender and address fieldset tags 
        into a container so that they can be side by side */
        #containerForGenderAndAddress {
            display: flex;
            gap: 4px;
        }

        #containerForGenderAndAddress input, select {
            margin-right: 20.5px;
        }

        #genderLegend {
            width: fit-content;
            display: inline-block;
            padding: 6px;
        }

        #addressLegend {
            width: fit-content;
            display: inline-block;
            padding: 6px;
        }


/*

5. CSS Requirements
No style markup should be included in your HTML file.
The pages in your website must be styled with CSS and have a consistent ‘look and feel’, particularly
common elements such as menus, headers and footers. While the emphasis is this assignment is on
the appropriate application of techniques rather than graphic design, your pages should follow
basic usability / accessibility principles, e.g. distinguishable foreground and background colours, and
font readability, etc.
Create your own design and implement it using one single external stylesheet that applies to all
your Web pages. This file should be named styles.css and placed in a styles folder. The stylesheet
should style the common elements on all your web pages, and address the following specific style
requirements.
1. Comments: The CSS should include comments at the beginning of the CSS file to identify
author and purpose. Individual line comments should be used as necessary to explain
particular styles and explain where they are applied.
2. Selectors: All the following CSS Selectors should be used appropriately at some point in this
assignment:
• element, #id, .class, grouping, contextual
• pseudo class, pseudo element
3. Menu: The menu should have its own set of styles applied. Use a background colour.
4. Index Page: Demonstrated the following specific CSS rules on the index.html page:
• display a background graphic.
5. Position Descriptions Page: Demonstrated the following specific CSS rules on the jobs.html
page:
• <h1> elements should have their font variant, size and family etc. set using the
short-hand font property.
• The <aside> should be 25% of the width of page and float to the right.
• The <aside> should have a coloured border with an appropriate margin and
padding.
• The footer should cover the full width of the page the footer text should be in a
small font and centred in the footer.
6. About Page: Demonstrated the following specific CSS rules on the about.html page:
• Style the student IDs on the right side of the page.
• The photo should be styled with a single border using the short-hand border-
property, and the figure should be floated to the right of the page.
• <table> should be centred within the section, headings in bold, table cells with a
background colour specified in hexadecimal format with some hover effect.
7. All pages: should have a fluid layout (the page should “Reflow” on page resize).
8. Apply.html: must have a display factor (e.g., flex or grid), use margin and padding, with
inputs, labels and button styling.
Other CSS selecto rs and p r o p e r t ie s can be used as necessary and appropriate for the
presentation
Do not include any proprietary CSS mark-up, such as –moz- or –webkit etc.
Hint: CSS validators will validate against a particular version of CSS e.g. CSS2.1 or 3. This assignment
should be valid CSS2.1 or CSS3. Make sure that you are checking your CSS using the correct version
of the validator. For example, if you include CSS3 markup and validate as CSS2.1 it will show errors.
(Best to pre-set the version in the Web Developer tools – see the note on Blackboard).

*/